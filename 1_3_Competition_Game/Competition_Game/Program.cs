using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Remoting.Metadata.W3cXsd2001;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using static System.Console;

namespace Competition_Game
{
    class Program
    {
        static void Main(string[] args)
        {

            #region Начальные переменные

            Random randy = new Random(); // Тот самый рандомайзер
            // Начальные ограничения значений в игре
            int gameNumMin = 12; // Минимальный порог для загадываемого числа
            int gameNumMax = 120; // Максимальный порог для загадываемого числа
            int userTryMax = 4; // Максимальный порог для вводимого игроком числа

            string player1 = "Игрок №1"; // Предварительное объявление мест под имена игроков
            string player2 = "Игрок №2"; // и тут тоже...
            string player3 = "Игрок №3"; // и здеся...
            string player4 = "Игрок №4"; // то же самое...

            string winn = "Победитель"; // буффер для имени победителя

            #endregion

            WriteLine($"Правила игры:" +
                $"\nПрограмма загадывает число" +
                $"\nИгроки ходят по очереди и вводят свое число от 1 до {userTryMax}" +
                $"\nЧисло игрока вычитается из загаданного игрой и результат показывается игрокам" +
                $"\nПобеждает тот, кто своим ходом обратил загаданное число в ноль (или меньше)");

            while (true) // Начало основной части программы (Цикл нужен для удобного возврата в начало, если нужно)
            {

                #region Дополнительные активноиспользуемые переменные

                byte playersNumber = 0; // Кол-во игроков
                byte userTry = 0; // Значение, вводимое игроком во время игры
                byte winState = 0; // Специальный индикатор для особой реплики при переигрывании матча против компухтера
                byte over = 0; // Индикатор для переключения между этапами игры
                byte plOrder = 1; // Индикатор, позваляющий отслеживать и контролировать порядок хода игроков
                // (Будь тут массивы, всё было бы проще....)

                #endregion

                #region Ввод кол-ва игроков с проверкой 

                while (true)
                {
                    Write("\nВведите кол-во игроков от 1 до 4: ");

                    while (true) // Ввод числа и его проверка
                    {
                        // Проверка введенного значения на его соответствие текущим требованиям
                        // (Кароч чтобы число не вылезло за пределы возможностей переменной и нужных нам условий)
                        if (byte.TryParse(ReadLine(), out playersNumber) && playersNumber <= 4 && playersNumber > 0) break;
                        else Write("Кол-во игроков должно быть целым числом от 1 до 4, попробуйте еще раз: ");
                    }
                    if (playersNumber == 1) // Особый случай, когда тебе не с кем играть
                    {
                        WriteLine("Видимо, вам не с кем играть, поэтому вы решили бросить вызов великому разуму" +
                            "\nВы действительно хотите продолжить? (1 - Да, покажи что можешь! 2 - Нет, я передумал)");

                        while (true) // Ввод ответа с проверкой
                        {
                            // Проверка введенного значения на его соответствие текущим требованиям
                            // (Кароч чтобы число не вылезло за пределы возможностей переменной и нужных нам условий)
                            if (byte.TryParse(ReadLine(), out over) && over <= 2 && over > 0) break;
                            else Write("Неверное значение, попробуйте еще раз: ");
                        }

                        if (over == 1) break; // Танцы с бубномъ

                    }

                    if (over == 0) break; // Танцы с бубномъ
                    over = 0;
                }
                over = 0;
                #endregion

                WriteLine($"Кол-во игроков: {playersNumber}");
                // Чисто декорация для более удобного восприятия текста в консоли
                WriteLine("\n----------------\n----------------");

                #region Однопользовательская часть игры (То есть бой с компухтеромъ)

                if (playersNumber == 1) // Бой насмерть с великим и ужасным ЭВМ
                {
                    while (true)
                    {

                        #region Ввод имени игрока

                        if (over != 1) // Проверека переигрывает ли игрок этот бой или начинает с начала (Имя сохраняется)
                        {
                            Write($"\nИгрок, осмелившийся выйти 1 на 1 с тем, кого нельзя называть, введите свой никнейм: ");
                            player1 = ReadLine();
                        }

                        #endregion

                        // Генерация и вывод случайного числа для его дальнейшего преобразования в игровых целях
                        int gameNumber = randy.Next(gameNumMin, gameNumMax + 1);
                        WriteLine($"\nЗагаданное число - {gameNumber}\n");

                        // Древнее заклинание, позволяющее приостановить выполнение программы на указанное кол-во миллисекундъ
                        Thread.Sleep(1024);

                        #region Дополнительные декоративные строки текста для того, чтоб разноообразить процесс

                        if (over == 1)
                        {
                            if (winState == 1)
                            {
                                WriteLine($"Ну держись, {player1}, в этот раз я не буду поддаваться...");
                                Thread.Sleep(2048);
                                WriteLine("Нажми любую клавишу, когда будешь готов");
                                ReadKey();
                            }
                            else
                            {
                                WriteLine($"Ну чтож, {player1}, может в этот раз тебе повезет больше...");
                                Thread.Sleep(2048);
                                WriteLine("Нажми любую клавишу, когда будешь готов");
                                ReadKey();
                            } 
                        }
                        else
                        {
                            WriteLine($"Приветствую тебя, человек по имени {player1}");
                            Thread.Sleep(2048);
                            WriteLine("Сегодня я буду твоим оппонентом в этом состязании");
                            Thread.Sleep(3072);
                            WriteLine("Давай перейдем сразу к делу");
                            Thread.Sleep(1024);
                            WriteLine("Нажми любую клавишу, когда будешь готов");
                            ReadKey();
                        }

                        #endregion

                        for (; ; ) // Сопствннъ сам игровой процесс
                        {

                           #region Обработка хода игрока

                            Write($"\nТвой ход, человек по имени {player1} - ");

                            #region Ввод числа и его проверка

                            while (true)
                            {
                                // Проверка введенного значения на его соответствие текущим требованиям
                                // (Кароч чтобы число не вылезло за пределы возможностей переменной и нужных нам условий)
                                if (byte.TryParse(ReadLine(), out userTry) && userTry <= userTryMax && userTry > 0) break;
                                else Write("Неподходящее значение, попробуй еще раз: ");
                            }

                            #endregion

                            gameNumber -= userTry; // Вычитание введенного числа из загаданного игрой
                            WriteLine($"@@@-[{gameNumber}]-@@@\n"); // Вывод получившегося числа 

                           #endregion

                            #region Проверка условия завершения игры и запись имени игрока как победителя

                            if (gameNumber <= 0) // Проверка загаданного числа и завершение игры, если число <= 0
                            {
                                winn = player1;
                                winState = 1; // Волшебный индикатор
                                break;
                            }

                            #endregion

                           #region Обработка хода Великого разума

                            Thread.Sleep(1024);

                            Write("Мой ход - ");

                            // Некий "Сложный" Алгоритм, по которому компухтер будет выигрывать в большинстве случаев
                            if ((userTryMax * 2) + 1 >= gameNumber && gameNumber > userTryMax + 1)
                            {
                                userTry = (byte)(gameNumber - (userTryMax + 1));
                            }
                            else if (gameNumber == userTryMax + 1)
                            {
                                userTry = (byte)randy.Next(1, userTryMax + 1);
                            }
                            else if (gameNumber <= userTryMax)
                            {
                                userTry = (byte)(userTry - (userTry - gameNumber));
                            }
                            else
                            {
                                userTry = (byte)randy.Next(1, userTryMax + 1);
                            }

                            WriteLine(userTry); // Вывод хода компухтера

                            gameNumber -= userTry; // Вычитание введенного числа из загаданного игрой
                            WriteLine($"@@@-[{gameNumber}]-@@@\n"); // Вывод получившегося числа 

                           #endregion

                            #region Проверка условия завершения игры и запись Великого разума как победителя

                            if (gameNumber <= 0) // Проверка загаданного числа и завершение игры, если число <= 0
                            {
                                winn = "Великий и ужасный ЭВМ";
                                winState = 0; // Волшебный индикатор
                                break;
                            }

                            #endregion
                        }

                        #region Победная/завершающая часть кода

                        WriteLine($"\nПоздравляем {winn} с победой!");
                        if (winState == 0)
                        {
                            Thread.Sleep(2048);
                            WriteLine("Исход был очевиден");
                            Thread.Sleep(2048);
                            WriteLine("Но я могу дать тебе шанс отыграться...");
                            Thread.Sleep(2048);
                        }
                        else
                        {
                            Thread.Sleep(2048);
                            WriteLine("Неплохо, неплохо...");
                            Thread.Sleep(2048);
                            WriteLine("Я играл не в полную силу, иначе у тебя бы не было шансов на победу");
                            Thread.Sleep(2048);
                        }
                        WriteLine("Хочешь повторить? (1 - для перезапуска нынешней партии, 2 - для выбора новой, 3 - для выхода из игры)");
                        while (true)
                        {
                            // Проверка введенного значения на его соответствие текущим требованиям
                            // (Кароч чтобы число не вылезло за пределы возможностей переменной и нужных нам условий)
                            if (byte.TryParse(ReadLine(), out over) && over <= 3 && over > 0) break;
                            else Write("Неподходящее значение, попробуйте еще раз: ");
                        }

                        #endregion

                        // Чисто декорация для более удобного восприятия текста в консоли
                        WriteLine("\n----------------\n----------------");

                        if (over == 2) break; // Страшные манипуляции с бубном и индикатором переключения игры между этапами
                        // Проще говоря эта часть из 3-х строк нужна для 
                        // адыкватной реакции программы на ответ пользователя 9-ю строками выше
                        else if (over == 3) break;

                    }

                }

                #endregion

                #region Многопользовательская часть игры

                else // Многопользовательская часть игры
                {
                    while (true) // Очередной "цыколъ" для более удобного возврата в начало этого этапа
                    {
                        #region Ввод имен игроков

                        // С массивами было бы намнооого проще

                        Write($"\nИгрок №1 введите свой никнейм: ");
                        player1 = ReadLine();

                        Write($"Игрок №2 введите свой никнейм: ");
                        player2 = ReadLine();

                        if (playersNumber >= 3)
                        {
                            Write($"Игрок №3 введите свой никнейм: ");
                            player3 = ReadLine();
                        }

                        if (playersNumber >= 4)
                        {
                            Write($"Игрок №4 введите свой никнейм: ");
                            player4 = ReadLine();
                        }

                        #endregion

                        // Генерация и вывод случайного числа для его дальнейшего преобразования в игровых целях
                        int gameNumber = randy.Next(gameNumMin, gameNumMax + 1); 
                        WriteLine($"\nЗагаданное число - {gameNumber}\n");

                        for (plOrder = 1; true ; plOrder++ ) // Сопствннъ сам игровой процесс
                        {

                           #region Обработка хода игрока

                            switch (plOrder) // Определение чья очередь сейчас ходить
                            {
                                case 1:
                                    Write($"Игрок {player1} ваш ход - ");
                                    break;
                                case 2:
                                    Write($"Игрок {player2} ваш ход - ");
                                    break;
                                case 3:
                                    Write($"Игрок {player3} ваш ход - ");
                                    break;
                                case 4:
                                    Write($"Игрок {player4} ваш ход - ");
                                    break;
                            }

                            #region Ввод числа и его проверка

                            while (true)
                            {
                                // Проверка введенного значения на его соответствие текущим требованиям
                                // (Кароч чтобы число не вылезло за пределы возможностей переменной и нужных нам условий)
                                if (byte.TryParse(ReadLine(), out userTry) && userTry <= userTryMax && userTry > 0) break;
                                else Write("Неподходящее значение, попробуйте еще раз: ");
                            }

                           #endregion

                            gameNumber -= userTry; // Вычитание введенного числа из загаданного игрой
                            WriteLine($"@@@-[{gameNumber}]-@@@\n"); // Вывод получившегося числа 

                            #endregion

                           #region Проверка условия завершения игры и запись имени победителя

                            if (gameNumber <= 0) // Проверка загаданного числа и завершение игры, если число <= 0
                            {
                                // Запись игрока, сделавшего последний ход, как победителя
                                switch (plOrder)
                                {
                                    case 1:
                                        winn = player1;
                                        break;
                                    case 2:
                                        winn = player2;
                                        break;
                                    case 3:
                                        winn = player3;
                                        break;
                                    case 4:
                                        winn = player4;
                                        break;
                                }
                                break;
                            }

                           #endregion

                            if (plOrder >= playersNumber) plOrder = 0; // Обнуление порядка игроков

                        }

                        #region Победная/завершающая часть кода

                        WriteLine($"\nПоздравляем игрока {winn} с победой!");
                        WriteLine("Хотите повторить? (1 - для перезапуска нынешней партии, 2 - для выбора новой, 3 - для выхода из игры)");
                        while (true)
                        {
                            // Проверка введенного значения на его соответствие текущим требованиям
                            // (Кароч чтобы число не вылезло за пределы возможностей переменной и нужных нам условий)
                            if (byte.TryParse(ReadLine(), out over) && over <= 3 && over > 0) break;
                            else Write("Неподходящее значение, попробуйте еще раз: ");
                        }

                        #endregion

                        // Чисто декорация для более удобного восприятия текста в консоли
                        WriteLine("\n----------------\n----------------"); 

                        if (over == 2) break; // Страшные манипуляции с бубном и индикатором переключения игры между этапами
                        // Проще говоря эта часть из 3-х строк нужна для 
                        // адыкватной реакции программы на ответ пользователя 9-ю строками выше
                        else if (over == 3) break;
                    }
                }

                #endregion

                if (over == 3) break;
            }
        }
    }
}
